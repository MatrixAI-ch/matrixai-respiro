const serverBaseUrl = window.isDev ? "http://localhost:3000" : "https://api.droxy.ai";
const appBaseUrl = window.isDev ? "http://localhost:4200" : "https://app.droxy.ai";
const FORBIDDEN_CODE = 403;
const NOT_FOUND_CODE = 404;
var smartAssistantId = document.currentScript.id;
if (!smartAssistantId) {
    alert("MatrixAI Chatbot id is not defined.");
    throw new Error("MatrixAI Chatbot id is not defined.");
    
    
    app.matrixai();
    
    
}
main();
async function main() {
    var smartAssistantBubbleData = await fetch(`${serverBaseUrl}/guest-smart-assistant/bubble/${smartAssistantId}`);
    if (smartAssistantBubbleData.status === FORBIDDEN_CODE) {
        alert("MatrixAI chatbot's accessibility is protected. You must change it to public or private in your chatbot's settings.");
        return
    } else if (smartAssistantBubbleData.status === NOT_FOUND_CODE) {
        alert("MatrixAI chatbot does not exist.");
        return
    }
    smartAssistantBubbleData = await smartAssistantBubbleData.json();
    const isAllowed = smartAssistantBubbleData.allowedDomains.some((domain=>new URL(domain).hostname === new URL(window.location.href).hostname));
    if (!isAllowed) {
        alert("This domain is not allowed. Add this domain to the allowed domain list in your MatrixAI chatbot settings.");
        return
    }
    loadFontAwesome();
    createBubble(smartAssistantBubbleData.avatarUrl, smartAssistantBubbleData.bubbleAligment, smartAssistantBubbleData.displayWelcomeMessage ? smartAssistantBubbleData.welcomeMessage : undefined);
    createSmartAssistantContainer(smartAssistantId, smartAssistantBubbleData.bubbleAligment, smartAssistantBubbleData.accentColor);
    hideWelcomeMessage();
}
function loadFontAwesome() {
    if (!document.getElementById("font-awesome-css")) {
        let link = document.createElement("link");
        link.id = "font-awesome-css";
        link.rel = "stylesheet";
        link.type = "text/css";
        link.href = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css";
        document.head.appendChild(link)
    }
}

function toggleDisplay() {
    const smartAssistantBox = document.getElementById("smart-assistant-container");
    const welcomeMessage = document.getElementById("welcome-message");
    if (smartAssistantBox.style.display === "none" || smartAssistantBox.style.display === "") {
        smartAssistantBox.style.display = "block";
        if (welcomeMessage)
            welcomeMessage.style.display = "none"
    } else {
        smartAssistantBox.style.display = "none";
        if (welcomeMessage)
            welcomeMessage.style.display = "block"
    }
}

function hideWelcomeMessage(){
 const welcomeMessage = document.getElementById("welcome-message");
    
            if (welcomeMessage) {

            // Hide the welcome message after 5 seconds on mobile screens
            if (window.innerWidth < 500) {
                setTimeout(() => {
                    welcomeMessage.style.display = "none";
                }, 5000);
            }
        }
}
function createBubble(imageUrl, position, welcomeMessage) {
    const bubbleHTML = `\n    <style>\n        #bubble {\n            position: fixed;\n            bottom: 20px;\n            ${position}: 20px;\n            width: 70px;\n            height: 70px;\n            border-radius: 50%;\n            background-image: url('${imageUrl}');\n            background-size: cover;\n            cursor: pointer;\n            transition: transform 0.3s ease;\n            transform-origin: center center;\n    z-index: 100;  }\n        \n        #bubble:hover {\n            transform: scale(1.1);\n        }\n    </style>\n    <div id="bubble"></div>\n  `;
    if (welcomeMessage) {
        const welcomeMessageHTML = `\n      <div id="welcome-message" style="\n        display: block;\n        font-family: Robotto,sans-serif;\n        font-size: 15px;\n        position: fixed;\n        bottom: 80px;\n        ${position}: 20px;\n        padding: 15px 20px;\n        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.15);\n        border-radius: 15px;\n        max-width: ${window.innerWidth > 350 ? "300px" : "250px"};\n        color: #000000;\n        background-color: #ffffff;\n        word-wrap: break-word;\n   z-index: 100;">\n        ${welcomeMessage}\n      </div>\n    `;
        document.body.insertAdjacentHTML("beforeend", welcomeMessageHTML)
    }
    document.body.insertAdjacentHTML("beforeend", bubbleHTML);
    const bubble = document.getElementById("bubble");
    bubble.addEventListener("click", toggleDisplay)
}
function createSmartAssistantContainer(smartAssistantId, position, accentColor) {
    const shouldOpenFullScreen = window.innerWidth <= 500;
    const smartAssistantContainerHTML = `\n    <div id="smart-assistant-container" style="\n        position: fixed;\n        bottom: ${shouldOpenFullScreen ? "0" : "30px"};\n        ${position}: ${shouldOpenFullScreen ? "0" : "80px"};\n        width: ${shouldOpenFullScreen ? "100vw" : "455px"};\n        height: ${shouldOpenFullScreen ? "100vh" : "800px"};\n        box-shadow: '0 0 15px rgba(0, 0, 0, 0.2)';\n        border-radius: ${shouldOpenFullScreen ? "0px" : "20px"};\n        overflow: hidden;\n        display: none;\n        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25); \n  z-index: 100;\n     ">\n      <i id="close-icon" class="fa-solid fa-xmark" style="\n      position: absolute;\n      top: 15px;\n      right: 15px;\n      cursor: pointer;\n      color: ${accentColor};\n      font-size: 25px;\n    "></i>\n      <iframe\n        src="${appBaseUrl}/guest-chatbot/${smartAssistantId}"\n        width="100%"\n        height="100%"\n        frameborder="0"\n        style="border-radius: ${shouldOpenFullScreen ? "0px" : "20px"};">\n    </iframe>\n    </div>`;
    document.body.insertAdjacentHTML("beforeend", smartAssistantContainerHTML);
    const closeIcon = document.getElementById("close-icon");
    closeIcon.addEventListener("click", toggleDisplay)
}
