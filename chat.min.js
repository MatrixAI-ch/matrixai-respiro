const serverBaseUrl = window.isDev ? "http://localhost:3000" : "https://api.droxy.ai";
const appBaseUrl = window.isDev ? "http://localhost:4200" : "https://app.droxy.ai";
const FORBIDDEN_CODE = 403;
const NOT_FOUND_CODE = 404;
var smartAssistantId = 6550ba5d85c56f39caa047d9; //document.currentScript.id;
if (!smartAssistantId) {
    alert("MatrixAI Chatbot id is not defined.");
    throw new Error("MatrixAI Chatbot id is not defined.");
    
    
    app.matrixai();
    
    
}
main();
async function main() {
    var smartAssistantBubbleData = await fetch(`${serverBaseUrl}/guest-smart-assistant/bubble/${smartAssistantId}`);
    if (smartAssistantBubbleData.status === FORBIDDEN_CODE) {
        alert("MatrixAI chatbot's accessibility is protected. You must change it to public or private in your chatbot's settings.");
        return
    } else if (smartAssistantBubbleData.status === NOT_FOUND_CODE) {
        alert("MatrixAI chatbot does not exist.");
        return
    }
    smartAssistantBubbleData = await smartAssistantBubbleData.json();
    const isAllowed = smartAssistantBubbleData.allowedDomains.some((domain=>new URL(domain).hostname === new URL(window.location.href).hostname));
    if (!isAllowed) {
        alert("This domain is not allowed. Add this domain to the allowed domain list in your MatrixAI chatbot settings.");
        return
    }
    loadFontAwesome();
    createBubble(smartAssistantBubbleData.avatarUrl, smartAssistantBubbleData.bubbleAligment, smartAssistantBubbleData.displayWelcomeMessage ? smartAssistantBubbleData.welcomeMessage : undefined);
    createSmartAssistantContainer(smartAssistantId, smartAssistantBubbleData.bubbleAligment, smartAssistantBubbleData.accentColor)
}
function loadFontAwesome() {
    if (!document.getElementById("font-awesome-css")) {
        let link = document.createElement("link");
        link.id = "font-awesome-css";
        link.rel = "stylesheet";
        link.type = "text/css";
        link.href = "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css";
        document.head.appendChild(link)
    }
}
function toggleDisplay() {
    const smartAssistantBox = document.getElementById("smart-assistant-container");
    const welcomeMessage = document.getElementById("welcome-message");
    if (smartAssistantBox.style.display === "none" || smartAssistantBox.style.display === "") {
        smartAssistantBox.style.display = "block";
        if (welcomeMessage)
            welcomeMessage.style.display = "none"
    } else {
        smartAssistantBox.style.display = "none";
        if (welcomeMessage)
            welcomeMessage.style.display = "block"
    }
}
function createBubble(imageUrl, position, welcomeMessage) {
    const bubbleHTML = `
        <style>
            #bubble {
                position: fixed;
                bottom: 20px;
                ${position}: 20px;
                width: 50px;
                height: 50px;
                border-radius: 50%;
                background-image: url('${imageUrl}');
                background-size: cover;
                cursor: pointer;
                transition: transform 0.3s ease;
                transform-origin: center center;
                z-index: 100; // Added z-index here
            }
            #bubble:hover {
                transform: scale(1.1);
            }
        </style>
        <div id="bubble"></div>
    `;
    if (welcomeMessage) {
        const welcomeMessageHTML = `
            <div id="welcome-message" style="
                display: block;
                font-family: Robotto,sans-serif;
                font-size: 15px;
                position: fixed;
                bottom: 80px;
                ${position}: 20px;
                padding: 15px 20px;
                box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.15);
                border-radius: 15px;
                max-width: ${window.innerWidth > 350 ? "300px" : "250px"};
                color: #000000;
                background-color: #ffffff;
                word-wrap: break-word;
                z-index: 100; // Added z-index here
            ">
                ${welcomeMessage}
            </div>
        `;
        document.body.insertAdjacentHTML("beforeend", welcomeMessageHTML)
    }
    document.body.insertAdjacentHTML("beforeend", bubbleHTML);
    const bubble = document.getElementById("bubble");
    bubble.addEventListener("click", toggleDisplay)
}

function createSmartAssistantContainer(smartAssistantId, position, accentColor) {
    const shouldOpenFullScreen = window.innerWidth <= 500;
    const smartAssistantContainerHTML = `
        <div id="smart-assistant-container" style="
            position: fixed;
            bottom: ${shouldOpenFullScreen ? "0" : "30px"};
            ${position}: ${shouldOpenFullScreen ? "0" : "80px"};
            width: ${shouldOpenFullScreen ? "100vw" : "455px"};
            height: ${shouldOpenFullScreen ? "100vh" : "800px"};
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            border-radius: ${shouldOpenFullScreen ? "0px" : "20px"};
            overflow: hidden;
            display: none;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.25);
            z-index: 100; // Added z-index here
        ">
            <i id="close-icon" class="fa-solid fa-xmark" style="
                position: absolute;
                top: 15px;
                right: 15px;
                cursor: pointer;
                color: ${accentColor};
                font-size: 25px;
            "></i>
            <iframe
                src="${appBaseUrl}/guest-chatbot/${smartAssistantId}"
                width="100%"
                height="100%"
                frameborder="0"
                style="border-radius: ${shouldOpenFullScreen ? "0px" : "20px"};">
            </iframe>
        </div>
    `;
    document.body.insertAdjacentHTML("beforeend", smartAssistantContainerHTML);
    const closeIcon = document.getElementById("close-icon");
    closeIcon.addEventListener("click", toggleDisplay)
}

